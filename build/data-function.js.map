{
  "version": 3,
  "sources": ["../src/scripts/data-function.ts"],
  "sourcesContent": ["const { HierarchicalClusteringSettings } = Spotfire.Dxp.Data.Computations.Clustering;\r\nconst { DataFunction, InputParameter, OutputParameter } = Spotfire.Dxp.Data.DataFunctions;\r\nconst { DataManager, DataType } = Spotfire.Dxp.Data;\r\n\r\n\r\n/*\r\n* looks up a Data Function in the current document by its name and executes it\r\n*\r\n* @param document - the current document\r\n* @param dataFunctionName - the name of the Data Function to execute\r\n* @param executeSynchronously - whether to execute the Data Function synchronously or not\r\n*/\r\nfunction executeDataFunctionByName(\r\n    document: Spotfire.Dxp.Application.Document,\r\n    dataFunctionName: string,\r\n    executeSynchronously: boolean = true,\r\n) {\r\n    const dataFunctionCollection = Array.from(document.Data.DataFunctions);\r\n    const dataFunction = dataFunctionCollection.find(df => df.Name === dataFunctionName);\r\n\r\n    if (dataFunction != null)\r\n        if (executeSynchronously)\r\n            dataFunction.ExecuteSynchronously();\r\n        else\r\n            dataFunction.Execute();\r\n    else\r\n        throw new Error(`Data Function with name ${dataFunctionName} not found`);\r\n}\r\n\r\nexport function triggerDataFunction({\r\n    document,\r\n    dataFunctionName,\r\n}: TriggerDataFunctionParameters) {\r\n\r\n    executeDataFunctionByName(document, dataFunctionName);\r\n}\r\n\r\nRegisterEntryPoint(triggerDataFunction);\r\n\r\n/*\r\nit's currently not possible to build Data Functions with Action Mods because the\r\nSpotfire.Dxp.Data.DataFunctions.DataFunctionBuilder API is not exposed in the\r\nAction Mods API.\r\n\r\nbut if you could it would probably look something like below.\r\n\r\nsee C#/Python API doc for more details:\r\nhttps://docs.tibco.com/pub/doc_remote/sfire_dev/area/doc/api/TIB_sfire-analyst_api/html/N_Spotfire_Dxp_Data_DataFunctions.htm\r\n*/\r\n/*\r\nconst { DataFunctionBuilder, DataFunctionExecutorTypeIdentifiers, ParameterType,\r\n    InputParamBuilder, OutputParamBuilder, PropertyOutputBuilder } = Spotfire.Dxp.Data.DataFunctions;\r\nconst { DataPropertyClass, DataManager } = Spotfire.Dxp.Data.;\r\n\r\n// DataFunctionBuilder is a \"factory\" class for DataFunction objects\r\nconst dfBuilder = DataFunctionBuilder(\r\n    \"data function name\",\r\n    DataFunctionExecutorTypeIdentifiers.PythonScriptExecutor\r\n);\r\n\r\nconst pythonScript = \"output = input * 2\";\r\ndfBuilder.Settings[\"Script\"] = pythonScript;\r\n\r\n// similarly, InputParamBuilder and OutputParamBuilder are \"factory\" classes for parameters\r\nconst inputParam = InputParamBuilder(\"input\", ParameterType.Value).Build();\r\ndfBuilder.InputParameters.Add(inputParam);\r\n\r\nconst outputParam = OutputParamBuilder(\"output\", ParameterType.Value).Build();\r\ndfBuilder.OutputParameters.Add(outputParam);\r\n\r\n// construct a DataFunctionDefinition object\r\nconst dfDefinition = dfBuilder.Build();\r\n\r\nconst dataFunction = document.Data.DataFunctions.AddNew(\"data function name\", dfDefinition);\r\ndataFunction.UpdateBehavior = DataFunctionUpdateBehavior.Manual;\r\ndataFunction.Visible = true;\r\ndataFunction.Inputs.SetInput(inputParam, 1);\r\n\r\n// represents a Document Property output\r\nconst propertyOutputBuilder = PropertyOutputBuilder.CreateDocumentPropertyOutput(\"outputDocProp\", DataManager).Build();\r\ndataFunction.Outputs.SetPropertyOutput(outputParam, propertyOutput);\r\n\r\ndataFunction.ExecuteSynchronously();\r\n*/"],
  "mappings": ";;;AAAA,MAAM,EAAE,+BAA+B,IAAI,SAAS,IAAI,KAAK,aAAa;AAC1E,MAAM,EAAE,cAAc,gBAAgB,gBAAgB,IAAI,SAAS,IAAI,KAAK;AAC5E,MAAM,EAAE,aAAa,SAAS,IAAI,SAAS,IAAI;AAU/C,WAAS,0BACL,UACA,kBACA,uBAAgC,MAClC;AACE,UAAM,yBAAyB,MAAM,KAAK,SAAS,KAAK,aAAa;AACrE,UAAM,eAAe,uBAAuB,KAAK,QAAM,GAAG,SAAS,gBAAgB;AAEnF,QAAI,gBAAgB;AAChB,UAAI;AACA,qBAAa,qBAAqB;AAAA;AAElC,qBAAa,QAAQ;AAAA;AAEzB,YAAM,IAAI,MAAM,2BAA2B,gBAAgB,YAAY;AAAA,EAC/E;AAEO,WAAS,oBAAoB;AAAA,IAChC;AAAA,IACA;AAAA,EACJ,GAAkC;AAE9B,8BAA0B,UAAU,gBAAgB;AAAA,EACxD;AAEA,qBAAmB,mBAAmB;",
  "names": []
}
